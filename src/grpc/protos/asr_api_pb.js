// source: asr_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.vox.asr.Empty', null, global);
goog.exportSymbol('proto.vox.asr.Model', null, global);
goog.exportSymbol('proto.vox.asr.ModelsResponse', null, global);
goog.exportSymbol('proto.vox.asr.RecognitionConfig', null, global);
goog.exportSymbol('proto.vox.asr.RecognitionRequest', null, global);
goog.exportSymbol('proto.vox.asr.RecognitionResponse', null, global);
goog.exportSymbol('proto.vox.asr.SpeechRecognitionChunk', null, global);
goog.exportSymbol('proto.vox.asr.StreamingRecognitionRequest', null, global);
goog.exportSymbol('proto.vox.asr.StreamingRecognitionRequest.StreamingRequestCase', null, global);
goog.exportSymbol('proto.vox.asr.StreamingRecognitionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.ModelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vox.asr.ModelsResponse.repeatedFields_, null);
};
goog.inherits(proto.vox.asr.ModelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.ModelsResponse.displayName = 'proto.vox.asr.ModelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.Model = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vox.asr.Model, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.Model.displayName = 'proto.vox.asr.Model';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.RecognitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vox.asr.RecognitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.RecognitionRequest.displayName = 'proto.vox.asr.RecognitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.StreamingRecognitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.vox.asr.StreamingRecognitionRequest.oneofGroups_);
};
goog.inherits(proto.vox.asr.StreamingRecognitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.StreamingRecognitionRequest.displayName = 'proto.vox.asr.StreamingRecognitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.RecognitionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vox.asr.RecognitionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.RecognitionConfig.displayName = 'proto.vox.asr.RecognitionConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.RecognitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vox.asr.RecognitionResponse.repeatedFields_, null);
};
goog.inherits(proto.vox.asr.RecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.RecognitionResponse.displayName = 'proto.vox.asr.RecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.StreamingRecognitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vox.asr.StreamingRecognitionResponse.repeatedFields_, null);
};
goog.inherits(proto.vox.asr.StreamingRecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.StreamingRecognitionResponse.displayName = 'proto.vox.asr.StreamingRecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.SpeechRecognitionChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vox.asr.SpeechRecognitionChunk.repeatedFields_, null);
};
goog.inherits(proto.vox.asr.SpeechRecognitionChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.SpeechRecognitionChunk.displayName = 'proto.vox.asr.SpeechRecognitionChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vox.asr.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vox.asr.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vox.asr.Empty.displayName = 'proto.vox.asr.Empty';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vox.asr.ModelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.ModelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.ModelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.ModelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.ModelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelsList: jspb.Message.toObjectList(msg.getModelsList(),
    proto.vox.asr.Model.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.ModelsResponse}
 */
proto.vox.asr.ModelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.ModelsResponse;
  return proto.vox.asr.ModelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.ModelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.ModelsResponse}
 */
proto.vox.asr.ModelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vox.asr.Model;
      reader.readMessage(value,proto.vox.asr.Model.deserializeBinaryFromReader);
      msg.addModels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.ModelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.ModelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.ModelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.ModelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vox.asr.Model.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Model models = 1;
 * @return {!Array<!proto.vox.asr.Model>}
 */
proto.vox.asr.ModelsResponse.prototype.getModelsList = function() {
  return /** @type{!Array<!proto.vox.asr.Model>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vox.asr.Model, 1));
};


/**
 * @param {!Array<!proto.vox.asr.Model>} value
 * @return {!proto.vox.asr.ModelsResponse} returns this
*/
proto.vox.asr.ModelsResponse.prototype.setModelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vox.asr.Model=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vox.asr.Model}
 */
proto.vox.asr.ModelsResponse.prototype.addModels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vox.asr.Model, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vox.asr.ModelsResponse} returns this
 */
proto.vox.asr.ModelsResponse.prototype.clearModelsList = function() {
  return this.setModelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.Model.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.Model.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.Model} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.Model.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sampleRateHertz: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.Model}
 */
proto.vox.asr.Model.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.Model;
  return proto.vox.asr.Model.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.Model} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.Model}
 */
proto.vox.asr.Model.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampleRateHertz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.Model.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.Model.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.Model} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.Model.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSampleRateHertz();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.vox.asr.Model.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.Model} returns this
 */
proto.vox.asr.Model.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 sample_rate_hertz = 2;
 * @return {number}
 */
proto.vox.asr.Model.prototype.getSampleRateHertz = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.vox.asr.Model} returns this
 */
proto.vox.asr.Model.prototype.setSampleRateHertz = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.RecognitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.RecognitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.RecognitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.vox.asr.RecognitionConfig.toObject(includeInstance, f),
    audioContent: msg.getAudioContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.RecognitionRequest}
 */
proto.vox.asr.RecognitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.RecognitionRequest;
  return proto.vox.asr.RecognitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.RecognitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.RecognitionRequest}
 */
proto.vox.asr.RecognitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vox.asr.RecognitionConfig;
      reader.readMessage(value,proto.vox.asr.RecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.RecognitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.RecognitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.RecognitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vox.asr.RecognitionConfig.serializeBinaryToWriter
    );
  }
  f = message.getAudioContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional RecognitionConfig config = 1;
 * @return {?proto.vox.asr.RecognitionConfig}
 */
proto.vox.asr.RecognitionRequest.prototype.getConfig = function() {
  return /** @type{?proto.vox.asr.RecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.vox.asr.RecognitionConfig, 1));
};


/**
 * @param {?proto.vox.asr.RecognitionConfig|undefined} value
 * @return {!proto.vox.asr.RecognitionRequest} returns this
*/
proto.vox.asr.RecognitionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vox.asr.RecognitionRequest} returns this
 */
proto.vox.asr.RecognitionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vox.asr.RecognitionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes audio_content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.vox.asr.RecognitionRequest.prototype.getAudioContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_content = 2;
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {string}
 */
proto.vox.asr.RecognitionRequest.prototype.getAudioContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioContent()));
};


/**
 * optional bytes audio_content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {!Uint8Array}
 */
proto.vox.asr.RecognitionRequest.prototype.getAudioContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vox.asr.RecognitionRequest} returns this
 */
proto.vox.asr.RecognitionRequest.prototype.setAudioContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vox.asr.StreamingRecognitionRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.vox.asr.StreamingRecognitionRequest.StreamingRequestCase = {
  STREAMING_REQUEST_NOT_SET: 0,
  CONFIG: 1,
  AUDIO_CONTENT: 2
};

/**
 * @return {proto.vox.asr.StreamingRecognitionRequest.StreamingRequestCase}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getStreamingRequestCase = function() {
  return /** @type {proto.vox.asr.StreamingRecognitionRequest.StreamingRequestCase} */(jspb.Message.computeOneofCase(this, proto.vox.asr.StreamingRecognitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.StreamingRecognitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.StreamingRecognitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.StreamingRecognitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.vox.asr.RecognitionConfig.toObject(includeInstance, f),
    audioContent: msg.getAudioContent_asB64(),
    onlyNew: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.StreamingRecognitionRequest}
 */
proto.vox.asr.StreamingRecognitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.StreamingRecognitionRequest;
  return proto.vox.asr.StreamingRecognitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.StreamingRecognitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.StreamingRecognitionRequest}
 */
proto.vox.asr.StreamingRecognitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vox.asr.RecognitionConfig;
      reader.readMessage(value,proto.vox.asr.RecognitionConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioContent(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyNew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.StreamingRecognitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.StreamingRecognitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.StreamingRecognitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vox.asr.RecognitionConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getOnlyNew();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional RecognitionConfig config = 1;
 * @return {?proto.vox.asr.RecognitionConfig}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getConfig = function() {
  return /** @type{?proto.vox.asr.RecognitionConfig} */ (
    jspb.Message.getWrapperField(this, proto.vox.asr.RecognitionConfig, 1));
};


/**
 * @param {?proto.vox.asr.RecognitionConfig|undefined} value
 * @return {!proto.vox.asr.StreamingRecognitionRequest} returns this
*/
proto.vox.asr.StreamingRecognitionRequest.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.vox.asr.StreamingRecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vox.asr.StreamingRecognitionRequest} returns this
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes audio_content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getAudioContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_content = 2;
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {string}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getAudioContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioContent()));
};


/**
 * optional bytes audio_content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {!Uint8Array}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getAudioContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vox.asr.StreamingRecognitionRequest} returns this
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.setAudioContent = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.vox.asr.StreamingRecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.vox.asr.StreamingRecognitionRequest} returns this
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.clearAudioContent = function() {
  return jspb.Message.setOneofField(this, 2, proto.vox.asr.StreamingRecognitionRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.hasAudioContent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool only_new = 3;
 * @return {boolean}
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.getOnlyNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vox.asr.StreamingRecognitionRequest} returns this
 */
proto.vox.asr.StreamingRecognitionRequest.prototype.setOnlyNew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.RecognitionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.RecognitionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.RecognitionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    model: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enableAutomaticPunctuation: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.RecognitionConfig}
 */
proto.vox.asr.RecognitionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.RecognitionConfig;
  return proto.vox.asr.RecognitionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.RecognitionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.RecognitionConfig}
 */
proto.vox.asr.RecognitionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAutomaticPunctuation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.RecognitionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.RecognitionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.RecognitionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnableAutomaticPunctuation();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string model = 1;
 * @return {string}
 */
proto.vox.asr.RecognitionConfig.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.RecognitionConfig} returns this
 */
proto.vox.asr.RecognitionConfig.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_name = 2;
 * @return {string}
 */
proto.vox.asr.RecognitionConfig.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.RecognitionConfig} returns this
 */
proto.vox.asr.RecognitionConfig.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool enable_automatic_punctuation = 3;
 * @return {boolean}
 */
proto.vox.asr.RecognitionConfig.prototype.getEnableAutomaticPunctuation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vox.asr.RecognitionConfig} returns this
 */
proto.vox.asr.RecognitionConfig.prototype.setEnableAutomaticPunctuation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vox.asr.RecognitionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.RecognitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.RecognitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.RecognitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.vox.asr.SpeechRecognitionChunk.toObject, includeInstance),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.RecognitionResponse}
 */
proto.vox.asr.RecognitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.RecognitionResponse;
  return proto.vox.asr.RecognitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.RecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.RecognitionResponse}
 */
proto.vox.asr.RecognitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vox.asr.SpeechRecognitionChunk;
      reader.readMessage(value,proto.vox.asr.SpeechRecognitionChunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.RecognitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.RecognitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.RecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.RecognitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vox.asr.SpeechRecognitionChunk.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated SpeechRecognitionChunk chunks = 1;
 * @return {!Array<!proto.vox.asr.SpeechRecognitionChunk>}
 */
proto.vox.asr.RecognitionResponse.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.vox.asr.SpeechRecognitionChunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vox.asr.SpeechRecognitionChunk, 1));
};


/**
 * @param {!Array<!proto.vox.asr.SpeechRecognitionChunk>} value
 * @return {!proto.vox.asr.RecognitionResponse} returns this
*/
proto.vox.asr.RecognitionResponse.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vox.asr.SpeechRecognitionChunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vox.asr.SpeechRecognitionChunk}
 */
proto.vox.asr.RecognitionResponse.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vox.asr.SpeechRecognitionChunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vox.asr.RecognitionResponse} returns this
 */
proto.vox.asr.RecognitionResponse.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.vox.asr.RecognitionResponse.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.RecognitionResponse} returns this
 */
proto.vox.asr.RecognitionResponse.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vox.asr.StreamingRecognitionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.StreamingRecognitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.StreamingRecognitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.StreamingRecognitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.vox.asr.SpeechRecognitionChunk.toObject, includeInstance),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    text: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pb_final: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.StreamingRecognitionResponse}
 */
proto.vox.asr.StreamingRecognitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.StreamingRecognitionResponse;
  return proto.vox.asr.StreamingRecognitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.StreamingRecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.StreamingRecognitionResponse}
 */
proto.vox.asr.StreamingRecognitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vox.asr.SpeechRecognitionChunk;
      reader.readMessage(value,proto.vox.asr.SpeechRecognitionChunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.StreamingRecognitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.StreamingRecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.StreamingRecognitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vox.asr.SpeechRecognitionChunk.serializeBinaryToWriter
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFinal();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated SpeechRecognitionChunk chunks = 1;
 * @return {!Array<!proto.vox.asr.SpeechRecognitionChunk>}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.vox.asr.SpeechRecognitionChunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vox.asr.SpeechRecognitionChunk, 1));
};


/**
 * @param {!Array<!proto.vox.asr.SpeechRecognitionChunk>} value
 * @return {!proto.vox.asr.StreamingRecognitionResponse} returns this
*/
proto.vox.asr.StreamingRecognitionResponse.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vox.asr.SpeechRecognitionChunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vox.asr.SpeechRecognitionChunk}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vox.asr.SpeechRecognitionChunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vox.asr.StreamingRecognitionResponse} returns this
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * optional string session_id = 2;
 * @return {string}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.StreamingRecognitionResponse} returns this
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string text = 3;
 * @return {string}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.StreamingRecognitionResponse} returns this
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool final = 4;
 * @return {boolean}
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.getFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.vox.asr.StreamingRecognitionResponse} returns this
 */
proto.vox.asr.StreamingRecognitionResponse.prototype.setFinal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vox.asr.SpeechRecognitionChunk.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.SpeechRecognitionChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.SpeechRecognitionChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.SpeechRecognitionChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    wordsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    loudness: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    speakerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phraseId: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.SpeechRecognitionChunk}
 */
proto.vox.asr.SpeechRecognitionChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.SpeechRecognitionChunk;
  return proto.vox.asr.SpeechRecognitionChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.SpeechRecognitionChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.SpeechRecognitionChunk}
 */
proto.vox.asr.SpeechRecognitionChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addWords(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLoudness(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpeakerId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPhraseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.SpeechRecognitionChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.SpeechRecognitionChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.SpeechRecognitionChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getWordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getLoudness();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getSpeakerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhraseId();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration start_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
*/
proto.vox.asr.SpeechRecognitionChunk.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration end_time = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
*/
proto.vox.asr.SpeechRecognitionChunk.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string words = 3;
 * @return {!Array<string>}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getWordsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.setWordsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.addWords = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.clearWordsList = function() {
  return this.setWordsList([]);
};


/**
 * optional float confidence = 4;
 * @return {number}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float loudness = 5;
 * @return {number}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getLoudness = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.setLoudness = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string speaker_id = 6;
 * @return {string}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getSpeakerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.setSpeakerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 phrase_id = 7;
 * @return {number}
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.getPhraseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.vox.asr.SpeechRecognitionChunk} returns this
 */
proto.vox.asr.SpeechRecognitionChunk.prototype.setPhraseId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vox.asr.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.vox.asr.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vox.asr.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vox.asr.Empty}
 */
proto.vox.asr.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vox.asr.Empty;
  return proto.vox.asr.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vox.asr.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vox.asr.Empty}
 */
proto.vox.asr.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vox.asr.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vox.asr.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vox.asr.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vox.asr.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.vox.asr);
